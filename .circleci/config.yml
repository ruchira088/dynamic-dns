version: 2.1

alias:
  - &install-sbt
    name: Install sbt
    command: |
      echo "deb https://repo.scala-sbt.org/scalasbt/debian all main" | sudo tee /etc/apt/sources.list.d/sbt.list && \
      echo "deb https://repo.scala-sbt.org/scalasbt/debian /" | sudo tee /etc/apt/sources.list.d/sbt_old.list && \
      curl -sL "https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x2EE0EA64E40A89B84B2DF73499E82A75642AC823" | sudo apt-key add && \
      sudo apt update && \
      sudo apt install sbt

  - &install-ansible
    name: Install Ansible
    command: |
      sudo apt update && \
      sudo apt install software-properties-common python3-pip -y

      pip3 install ansible boto3 botocore

  - &install-kubectl
    name: Install kubectl
    command: |
      curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add - && \
      echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list && \
      sudo apt update && \
      sudo apt install -y kubectl

  - &install-serverless
    name: Install Serverless
    command: sudo npm install serverless -g

jobs:
  build-and-test:
    docker:
      - image: cimg/openjdk:11.0
    steps:
      - run: *install-sbt
      - checkout
      - restore_cache: &dependency-cache-keys
          keys:
            - sbt-cache-{{ checksum "project/build.properties" }}-{{ checksum "project/plugins.sbt" }}-{{ checksum "project/Dependencies.scala" }}
            - sbt-cache
      - run:
          name: Fetch compile dependencies
          command: sbt update
      - run:
          name: Clean build all sbt projects
          command: sbt refreshAll
      - save_cache:
          key: sbt-cache-{{ checksum "project/build.properties" }}-{{ checksum "project/plugins.sbt" }}-{{ checksum "project/Dependencies.scala" }}
          paths:
            - ~/.sbt
            - ~/.cache/coursier

  build-and-publish-docker-images:
    docker:
      - image: cimg/openjdk:11.0
    steps:
      - setup_remote_docker
      - run: *install-sbt
      - run: *install-ansible
      - checkout
      - restore_cache: *dependency-cache-keys
      - run:
          name: Build and publish Docker images to Docker Hub
          command: ansible-playbook playbooks/build-and-publish-docker-images.yml

  deploy-serverless-application:
    docker:
      - image: cimg/openjdk:11.0-node
    steps:
      - setup_remote_docker
      - run: *install-sbt
      - run: *install-ansible
      - run: *install-serverless
      - checkout
      - restore_cache: *dependency-cache-keys
      - run:
          name: Deploy Serverless application
          command: ansible-playbook playbooks/serverless-deploy.yml

  deploy-to-k8s:
    docker:
      - image: cimg/base:stable
    steps:
      - run: *install-ansible
      - run: *install-kubectl
      - checkout
      - run:
          name: Deploy applications to K8s
          command: ansible-playbook playbooks/k8s-deploy.yml

orbs:
  slack: circleci/slack@3

workflows:
  version: 2

  dynamic-dns:
    jobs:
      - build-and-test:
          post-steps:
            - slack/status

      - build-and-publish-docker-images:
          context: aws-credentials
          requires:
            - build-and-test
          post-steps:
            - slack/status

      - deploy-serverless-application:
          context: aws-credentials
          requires:
            - build-and-test
          post-steps:
            - slack/status

      - deploy-to-k8s:
          context: aws-credentials
          requires:
            - build-and-publish-docker-images
          post-steps:
            - slack/status
